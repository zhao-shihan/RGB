name: Test docker images

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test-docker-images:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image:
          - "ghcr.io/zhao-shihan/rgb-docker"
          - "ghcr.io/zhao-shihan/rgb-docker:slim"
          - "ghcr.io/zhao-shihan/rgb-docker:mpich"
          - "ghcr.io/zhao-shihan/rgb-docker:mpich-slim"
          - "ghcr.io/zhao-shihan/rgb-docker:openmpi"
          - "ghcr.io/zhao-shihan/rgb-docker:openmpi-slim"
          - "ghcr.io/zhao-shihan/rgb-docker:latest"
          - "ghcr.io/zhao-shihan/rgb-docker:latest-slim"
          - "ghcr.io/zhao-shihan/rgb-docker:latest-mpich"
          - "ghcr.io/zhao-shihan/rgb-docker:latest-mpich-slim"
          - "ghcr.io/zhao-shihan/rgb-docker:latest-openmpi"
          - "ghcr.io/zhao-shihan/rgb-docker:latest-openmpi-slim"
          - "ghcr.io/zhao-shihan/rgb-docker:25.10.14"
          - "ghcr.io/zhao-shihan/rgb-docker:25.10.14-slim"
          - "ghcr.io/zhao-shihan/rgb-docker:25.10.14-mpich"
          - "ghcr.io/zhao-shihan/rgb-docker:25.10.14-mpich-slim"
          - "ghcr.io/zhao-shihan/rgb-docker:25.10.14-openmpi"
          - "ghcr.io/zhao-shihan/rgb-docker:25.10.14-openmpi-slim"

    container: ${{ matrix.image }}

    name: Test ${{ matrix.image }}

    defaults:
      run:
        shell: bash

    steps:
      - name: Set dynamic variable
        id: vars
        run: |
          echo "::set-output name=n_physical_core::$(echo "$(nproc --all) / $(lscpu | grep "Thread(s) per core" | awk '{print $4}')" | bc)"

      - name: Check MPI config
        run: |
          . /environment
          mpirun --version
          mpiexec --version
          mpicc -v
          mpic++ -v
          mpicxx -v
          mpifort -v
          mpif77 -v
          mpif90 -v

      - name: Test MPI
        run: |
          . /environment
          mkdir test-mpi && cd test-mpi
          git clone https://github.com/LLNL/mpiBench.git
          cd mpiBench
          make
          mpiexec -n ${{ steps.vars.outputs.n_physical_core }} ./mpiBench || \
            mpiexec --allow-run-as-root -n ${{ steps.vars.outputs.n_physical_core }} ./mpiBench

      - name: Check ROOT config
        run: |
          . /environment
          root-config --prefix
          root-config --cc
          root-config --cxx
          root-config --version
          root-config --features
          root-config --config

      - name: Test ROOT
        run: |
          . /environment
          mkdir test-root && cd test-root
          root_tutorial_dir=$ROOTSYS/tutorial
          root -l -q ${root_tutorial_dir}/hsimple.C
          python ${root_tutorial_dir}/hsimple.C
          root -l -q ${root_tutorial_dir}/math/mathmoreIntegration.C
          root -l -q ${root_tutorial_dir}/roofit/roofit/rf801_mcstudy.C
          python ${root_tutorial_dir}/roofit/roofit/rf801_mcstudy.py

      - name: Check Geant4 config
        run: |
          . /environment
          geant4-config --prefix
          geant4-config --version
          geant4-config --libs
          geant4-config --cflags

      - name: Test Geant4
        run: |
          . /environment
          geant4-config --prefix
          geant4-config --version
          geant4-config --libs
          geant4-config --cflags
