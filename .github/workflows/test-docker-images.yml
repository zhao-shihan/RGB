name: Test docker images

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  MusAirS_VERSION: 0.25.1015

jobs:
  test-docker-images:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image:
          - "ghcr.io/zhao-shihan/rgb-docker"
          - "ghcr.io/zhao-shihan/rgb-docker:slim"
          - "ghcr.io/zhao-shihan/rgb-docker:mpich"
          - "ghcr.io/zhao-shihan/rgb-docker:mpich-slim"
          - "ghcr.io/zhao-shihan/rgb-docker:openmpi"
          - "ghcr.io/zhao-shihan/rgb-docker:openmpi-slim"
          - "ghcr.io/zhao-shihan/rgb-docker:latest"
          - "ghcr.io/zhao-shihan/rgb-docker:latest-slim"
          - "ghcr.io/zhao-shihan/rgb-docker:latest-mpich"
          - "ghcr.io/zhao-shihan/rgb-docker:latest-mpich-slim"
          - "ghcr.io/zhao-shihan/rgb-docker:latest-openmpi"
          - "ghcr.io/zhao-shihan/rgb-docker:latest-openmpi-slim"
          - "ghcr.io/zhao-shihan/rgb-docker:25.10.14"
          - "ghcr.io/zhao-shihan/rgb-docker:25.10.14-slim"
          - "ghcr.io/zhao-shihan/rgb-docker:25.10.14-mpich"
          - "ghcr.io/zhao-shihan/rgb-docker:25.10.14-mpich-slim"
          - "ghcr.io/zhao-shihan/rgb-docker:25.10.14-openmpi"
          - "ghcr.io/zhao-shihan/rgb-docker:25.10.14-openmpi-slim"

    container: ${{ matrix.image }}

    name: Test ${{ matrix.image }}

    defaults:
      run:
        shell: bash

    steps:
      - name: Set dynamic variables
        id: vars
        run: |
          . /environment
          echo "wd=$(pwd)" >> $GITHUB_OUTPUT
          echo "n_physical_core=$(echo "$(nproc --all) / $(env LC_ALL=C lscpu | grep "Thread(s) per core" | awk '{print $4}')" | bc)" >> $GITHUB_OUTPUT

      - name: Prepare MPI run script
        run: |
          . /environment
          n_physical_core=${{ steps.vars.outputs.n_physical_core }}
          echo '#!/bin/bash' >mpirun-test
          echo 'if [[ -n "$(echo $(mpirun --version 2>/dev/null) | grep "Open MPI")" ]]; then' >>mpirun-test
          echo "    mpirun --allow-run-as-root \$@" >>mpirun-test
          echo "else" >>mpirun-test
          echo "    mpirun -n $n_physical_core \$@" >>mpirun-test
          echo "fi" >>mpirun-test
          chmod +x mpirun-test

      - name: Check MPI config
        run: |
          . /environment
          mpirun --version
          mpiexec --version
          mpicc -v
          mpic++ -v
          mpicxx -v
          mpifort -v
          mpif77 -v
          mpif90 -v

      - name: Test MPI
        run: |
          . /environment
          git clone https://github.com/LLNL/mpiBench.git
          cd mpiBench
          make
          ${{ steps.vars.outputs.wd }}/mpirun-test ./mpiBench

      - name: Check ROOT config
        run: |
          . /environment
          root-config --prefix
          root-config --cc
          root-config --cxx
          root-config --version
          root-config --features
          root-config --config

      - name: Test ROOT
        run: |
          . /environment
          mkdir test-root && cd test-root
          root_tutorial_dir=$ROOTSYS/tutorials
          root -l -q ${root_tutorial_dir}/hsimple.C || true
          python ${root_tutorial_dir}/hsimple.C || true
          root -l -q ${root_tutorial_dir}/hist/hist019_TH2_projection.C || true
          python ${root_tutorial_dir}/hist/hist019_TH2_projection.py || true
          root -l -q ${root_tutorial_dir}/io/tree/mt_fillNtupleFromMultipleThreads.C || true
          root -l -q ${root_tutorial_dir}/math/mathmoreIntegration.C || true
          root -l -q ${root_tutorial_dir}/roofit/roofit/rf801_mcstudy.C || true
          python ${root_tutorial_dir}/roofit/roofit/rf801_mcstudy.py || true

      - name: Check Geant4 config
        run: |
          . /environment
          geant4-config --prefix
          geant4-config --version
          geant4-config --libs
          geant4-config --cflags

      - name: Test RGB
        run: |
          . /environment
          wget -nv -t=15 https://github.com/zhao-shihan/MusAirS/archive/refs/tags/v${MusAirS_VERSION}.tar.gz -O MusAirS-${MusAirS_VERSION}.tar.gz
          tar -xvf MusAirS-${MusAirS_VERSION}.tar.gz
          cd MusAirS-${MusAirS_VERSION}
          mkdir build && cd build
          cmake -G Ninja ..
          ninja
          [[ -n "$GEANT4_DATA_DIR" ]] ||
             ${{ steps.vars.outputs.wd }}/mpirun-test ./MusAirS run_p_AMS_lite.mac
