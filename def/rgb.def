Bootstrap: localimage
From: {{BASE}}

%arguments
    BASE=

%post
    apt -y update
    apt -y full-upgrade
    apt -y autopurge
    apt clean

    cd /opt

    cd root-build
    for arch in 'x86-64-v3' 'x86-64-v2'; do
        mkdir build-$arch
        cd build-$arch
        cmake -G Ninja ../src/ \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_C_COMPILER=fastclang \
            -DCMAKE_CXX_COMPILER=fastclang++ \
            -DCMAKE_C_STANDARD=17 \
            -DCMAKE_CXX_STANDARD=20 \
            -DCMAKE_INTERPROCEDURAL_OPTIMIZATION=ON \
            -Dfftw3=ON \
            -Dgviz=ON \
            -Dmathmore=ON \
            -Dmpi=ON \
            -Dqt6web=ON \
            -Dshadowpw=ON \
            -Dsoversion=ON \
            -Dunfold=ON \
            -Dunuran=ON \
            -During=ON \
            -Duse_gsl_cblas=OFF \
            -Dtmva-cudnn=OFF \
            -DCMAKE_INSTALL_PREFIX=/opt/$arch/root \
            -DCMAKE_C_FLAGS="-march=$arch" \
            -DCMAKE_CXX_FLAGS="-march=$arch"
        ninja
        ninja install
        cd ..
    done
    cd ..
    rm -rf root-build

    cd geant4-build
    for arch in 'x86-64-v3' 'x86-64-v2'; do
        mkdir build-$arch
        cd build-$arch
        cmake -G Ninja ../src/ \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_C_COMPILER=fastgcc \
            -DCMAKE_CXX_COMPILER=fastg++ \
            -DCMAKE_C_STANDARD=17 \
            -DCMAKE_CXX_STANDARD=20 \
            -DCMAKE_INTERPROCEDURAL_OPTIMIZATION=ON \
            -DGEANT4_INSTALL_DATADIR=/opt/geant4-data \
            -DGEANT4_USE_GDML=ON \
            -DGEANT4_USE_OPENGL_X11=ON \
            -DGEANT4_USE_QT=ON \
            -DGEANT4_USE_RAYTRACER_X11=ON \
            -DGEANT4_USE_SYSTEM_ZLIB=ON \
            -DGEANT4_INSTALL_DATASETS_TENDL=ON \
            -DGEANT4_INSTALL_DATASETS_NUDEXLIB=ON \
            -DGEANT4_INSTALL_DATASETS_URRPT=ON \
            -DCMAKE_INSTALL_PREFIX=/opt/$arch/geant4 \
            -DCMAKE_C_FLAGS="-march=$arch" \
            -DCMAKE_CXX_FLAGS="-march=$arch"
        ninja
        ninja install
        cd ..
    done
    cd ..
    rm -rf geant4-build

    update_root_env() {
        ROOT_DIR=/opt/$1/root
        export PATH=$ROOT_DIR/bin:$PATH
        export LIBRARY_PATH=$ROOT_DIR/lib:$LIBRARY_PATH
        export LD_LIBRARY_PATH=$ROOT_DIR/lib:$LD_LIBRARY_PATH
        export PYTHONPATH=$ROOT_DIR/lib:$PYTHONPATH
        export MANPATH=$ROOT_DIR/man:$MANPATH
        export CMAKE_PREFIX_PATH=$ROOT_DIR:$CMAKE_PREFIX_PATH
        export JUPYTER_PATH=$ROOT_DIR/etc/notebook:$JUPYTER_PATH
        export JUPYTER_CONFIG_DIR=$ROOT_DIR/etc/notebook:$JUPYTER_CONFIG_DIR
        export ROOTSYS=$ROOT_DIR
        export CLING_STANDARD_PCH=none
    }

    cd garfieldpp-build
    for arch in 'x86-64-v3' 'x86-64-v2'; do
        update_root_env $arch
        mkdir build-$arch
        cd build-$arch
        cmake ../src/ \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_C_COMPILER=fastgcc \
            -DCMAKE_CXX_COMPILER=fastg++ \
            -DCMAKE_Fortran_COMPILER=fastgfortran \
            -DCMAKE_C_STANDARD=17 \
            -DCMAKE_CXX_STANDARD=20 \
            -DBUILD_SHARED_LIBS=ON \
            -DCMAKE_INSTALL_PREFIX=/opt/$arch/garfieldpp \
            -DCMAKE_C_FLAGS="-march=$arch" \
            -DCMAKE_CXX_FLAGS="-march=$arch" \
            -DCMAKE_Fortran_FLAGS="-march=$arch"
        make -j$(grep "processor" /proc/cpuinfo | sort | uniq | wc -l)
        make install
        cd ..
    done
    cd ..
    rm -rf garfieldpp-build

%environment
    GEANT4_DIR=/opt/$RUNTIME_X86_VERSION/geant4
    export PATH=$GEANT4_DIR/bin:$PATH
    export LIBRARY_PATH=$GEANT4_DIR/lib:$LIBRARY_PATH
    export LD_LIBRARY_PATH=$GEANT4_DIR/lib:$LD_LIBRARY_PATH
    export CMAKE_PREFIX_PATH=$GEANT4_DIR:$CMAKE_PREFIX_PATH

    ROOT_DIR=/opt/$RUNTIME_X86_VERSION/root
    export PATH=$ROOT_DIR/bin:$PATH
    export LIBRARY_PATH=$ROOT_DIR/lib:$LIBRARY_PATH
    export LD_LIBRARY_PATH=$ROOT_DIR/lib:$LD_LIBRARY_PATH
    export PYTHONPATH=$ROOT_DIR/lib:$PYTHONPATH
    export MANPATH=$ROOT_DIR/man:$MANPATH
    export CMAKE_PREFIX_PATH=$ROOT_DIR:$CMAKE_PREFIX_PATH
    export JUPYTER_PATH=$ROOT_DIR/etc/notebook:$JUPYTER_PATH
    export JUPYTER_CONFIG_DIR=$ROOT_DIR/etc/notebook:$JUPYTER_CONFIG_DIR
    export ROOTSYS=$ROOT_DIR
    export CLING_STANDARD_PCH=none

    export GARFIELDPP_INSTALL=/opt/$RUNTIME_X86_VERSION/garfieldpp
    export LIBRARY_PATH=$GARFIELDPP_INSTALL/lib:$LIBRARY_PATH
    export LD_LIBRARY_PATH=$GARFIELDPP_INSTALL/lib:$LD_LIBRARY_PATH
    export CMAKE_PREFIX_PATH=$GARFIELDPP_INSTALL:$CMAKE_PREFIX_PATH
    export HEED_DATABASE=$GARFIELDPP_INSTALL/share/Heed/database
    export PYTHONPATH=$(find $GARFIELDPP_INSTALL/lib -name site-packages | sed -n 1p):$PYTHONPATH
